# coding: utf-8

"""
    dtool-lookup-server API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dtool_lookup_openapi_client
from dtool_lookup_openapi_client.models.register_dataset import RegisterDataset  # noqa: E501
from dtool_lookup_openapi_client.rest import ApiException

class TestRegisterDataset(unittest.TestCase):
    """RegisterDataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RegisterDataset
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dtool_lookup_openapi_client.models.register_dataset.RegisterDataset()  # noqa: E501
        if include_optional :
            return RegisterDataset(
                readme = None, 
                uuid = '', 
                annotations = None, 
                tags = [
                    ''
                    ], 
                uri = '', 
                name = '', 
                manifest = dtool_lookup_openapi_client.models.manifest.Manifest(
                    hash_function = '', 
                    items = {
                        'key' : dtool_lookup_openapi_client.models.item.Item(
                            size_in_bytes = 56, 
                            relpath = '', 
                            hash = '', 
                            utc_timestamp = 1.337, )
                        }, 
                    dtoolcore_version = '', ), 
                type = '', 
                base_uri = '', 
                frozen_at = '', 
                created_at = '', 
                creator_username = ''
            )
        else :
            return RegisterDataset(
        )

    def testRegisterDataset(self):
        """Test RegisterDataset"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
